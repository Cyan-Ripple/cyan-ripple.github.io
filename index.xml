<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Cyan</title>
    <link>https://cyan-ripple.github.io/</link>
    <description>Recent content on Cyan</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 08 Apr 2022 21:35:22 +0800</lastBuildDate><atom:link href="https://cyan-ripple.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>背包问题</title>
      <link>https://cyan-ripple.github.io/post/knapsackproblem/</link>
      <pubDate>Fri, 08 Apr 2022 21:35:22 +0800</pubDate>
      
      <guid>https://cyan-ripple.github.io/post/knapsackproblem/</guid>
      <description>前言 在21年我第一次学习动态规划算法的时候，HQ学长安排的入门题目即是背包。直至前不久我只把背包当成一种有限的题目来看，未想还有如此讲究。
实际上，有很多问题可以规约为一个背包问题。
背包问题的三类  01背包：某物品选 or 不选； 完全背包：某物品无限多可选； 多重背包：某物品有n[i]件可选。   👇以下内容主要摘自：希望用一种规律搞定背包问题 - 组合总和 Ⅳ - 力扣（LeetCode） (leetcode-cn.com)
样题（LeetCode）  组合问题：  377. 组合总和 Ⅳ 378. 目标和 379. 零钱兑换 II True、False问题：  377. 单词拆分 378. 分割等和子集 最大最小问题：  377. 一和零 378. 零钱兑换 公式一览  组合问题公式  dp[i] += dp[i-num] True、False问题公式  dp[i] = dp[i] or dp[i-num] 最大最小问题公式  dp[i] = min(dp[i], dp[i-num]+1) dp[i] = max(dp[i], dp[i-num]+1) 问题几步骤  分析是否为背包问题。 是以上三种背包问题中的哪一种。 是0-1背包问题还是完全背包问题。也就是题目给的nums数组中的元素是否可以重复使用。 如果是组合问题，是否需要考虑元素之间的顺序。需要考虑顺序有顺序的解法，不需要考虑顺序又有对应的解法。  背包问题的判定 背包问题具备的特征：给定一个target，target可以是数字也可以是字符串，再给定一个数组nums，nums中装的可能是数字，也可能是字符串，问：能否使用nums中的元素做各种排列组合得到target。</description>
    </item>
    
    <item>
      <title>BERT</title>
      <link>https://cyan-ripple.github.io/post/bert/</link>
      <pubDate>Wed, 06 Apr 2022 21:08:15 +0800</pubDate>
      
      <guid>https://cyan-ripple.github.io/post/bert/</guid>
      <description>前言 研究BERT（无果），记录些好的参考（减轻浏览器收藏夹的压力……）
参考 论文解读:BERT模型及fine-tuning - 知乎 (zhihu.com)
LeeMeng - 進擊的 BERT：NLP 界的巨人之力與遷移學習
google-research/bert: TensorFlow code and pre-trained models for BERT (github.com)
LeeMeng - 淺談神經機器翻譯 &amp;amp; 用 Transformer 與 TensorFlow 2 英翻中</description>
    </item>
    
    <item>
      <title>LSTM and GRU</title>
      <link>https://cyan-ripple.github.io/post/lstmandgru/</link>
      <pubDate>Tue, 05 Apr 2022 23:01:41 +0800</pubDate>
      
      <guid>https://cyan-ripple.github.io/post/lstmandgru/</guid>
      <description>前言 曾经天真的以为LSTM&amp;gt;GRU
实际上GRU的出现时间晚于LSTM（值得深究不是吗？）
References GRU及双向RNN介绍_幸福诗歌的博客-CSDN博客_双向gru
GRU与LSTM总结_lreaderl的博客-CSDN博客_gru lstm</description>
    </item>
    
    <item>
      <title>WSA</title>
      <link>https://cyan-ripple.github.io/post/wsa/</link>
      <pubDate>Tue, 05 Apr 2022 22:45:04 +0800</pubDate>
      
      <guid>https://cyan-ripple.github.io/post/wsa/</guid>
      <description>Installation 准备   启用Hyper-V 和 虚拟机平台
  配置好 ADB
  下载WSA package
 https://www.microsoft.com/store/productId/9P3395VX91NR 下载最大的那个（1G+）    安装  截止日前，不需要修改区域（中国区），仅亚马逊商店不提供服务
  管理员运行Power Shell  Add-AppxPackage -Path &amp;lt;path to downloaded file&amp;gt;  在Windows中打开开发者模式 连接到ADB  adb connect [::1]:58526  安装程序  adb -s [::1]:58526 install &amp;#34;D:\HandShaker.apk&amp;#34; Recommend    Item Intro     HandShaker 锤子遗产、子系统和电脑互传文件   权限狗 给应用添加权限，比如 Ｖ**   微软桌面 App 启动器   https://apkpure.</description>
    </item>
    
    <item>
      <title>Optimizer</title>
      <link>https://cyan-ripple.github.io/post/optimizer/</link>
      <pubDate>Tue, 05 Apr 2022 22:43:07 +0800</pubDate>
      
      <guid>https://cyan-ripple.github.io/post/optimizer/</guid>
      <description>前言 参考的资料和自己在进行炼丹（姑且这么称作）的时候，经常使用的是Adam，在尝试了learning_rate, schedule等方法（无果，大概…）后，突然想到要去了解一下其中的原理。
资料 一个框架看懂优化算法之异同 SGD/AdaGrad/Adam - 知乎 (zhihu.com)
Adam那么棒，为什么还对SGD念念不忘 (2)—— Adam的两宗罪 - 知乎 (zhihu.com)
Adam那么棒，为什么还对SGD念念不忘 (3)—— 优化算法的选择与使用策略 - 知乎 (zhihu.com)
综述 Adam自带优化，会调整learning_rate（所以自己再用schedule, 微调learning_rate貌似没啥用了……
大神都用SGD手调参数</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://cyan-ripple.github.io/about/</link>
      <pubDate>Sat, 19 Mar 2022 13:55:33 +0800</pubDate>
      
      <guid>https://cyan-ripple.github.io/about/</guid>
      <description>⠄⠄⠄⠄⢠⣿⣿⣿⣿⣿⢻⣿⣿⣿⣿⣿⣿⣿⣿⣯⢻⣿⣿⣿⣿⣆⠄⠄⠄ ⠄⠄⣼⢀⣿⣿⣿⣿⣏⡏⠄⠹⣿⣿⣿⣿⣿⣿⣿⣿⣧⢻⣿⣿⣿⣿⡆⠄⠄ ⠄⠄⡟⣼⣿⣿⣿⣿⣿⠄⠄⠄⠈⠻⣿⣿⣿⣿⣿⣿⣿⣇⢻⣿⣿⣿⣿⠄⠄ ⠄⢰⠃⣿⣿⠿⣿⣿⣿⠄⠄⠄⠄⠄⠄⠙⠿⣿⣿⣿⣿⣿⠄⢿⣿⣿⣿⡄⠄ ⠄⢸⢠⣿⣿⣧⡙⣿⣿⡆⠄⠄⠄⠄⠄⠄⠄⠈⠛⢿⣿⣿⡇⠸⣿⡿⣸⡇⠄ ⠄⠈⡆⣿⣿⣿⣿⣦⡙⠳⠄⠄⠄⠄⠄⠄⢀⣠⣤⣀⣈⠙⠃⠄⠿⢇⣿⡇⠄ ⠄⠄⡇⢿⣿⣿⣿⣿⡇⠄⠄⠄⠄⠄⣠⣶⣿⣿⣿⣿⣿⣿⣷⣆⡀⣼⣿⡇⠄ ⠄⠄⢹⡘⣿⣿⣿⢿⣷⡀⠄⢀⣴⣾⣟⠉⠉⠉⠉⣽⣿⣿⣿⣿⠇⢹⣿⠃⠄ ⠄⠄⠄⢷⡘⢿⣿⣎⢻⣷⠰⣿⣿⣿⣿⣦⣀⣀⣴⣿⣿⣿⠟⢫⡾⢸⡟⠄. ⠄⠄⠄⠄⠻⣦⡙⠿⣧⠙⢷⠙⠻⠿⢿⡿⠿⠿⠛⠋⠉⠄⠂⠘⠁⠞⠄⠄⠄ ⠄⠄⠄⠄⠄⠈⠙⠑⣠⣤⣴⡖⠄⠿⣋⣉⣉⡁⠄⢾⣦⠄⠄⠄⠄⠄⠄⠄⠄ 
普通大学生，喜欢做有意义的事情。

🌑**Coolapk**
🌕**CSDN**</description>
    </item>
    
    <item>
      <title>Python Requests库代理</title>
      <link>https://cyan-ripple.github.io/post/requestsproxy/</link>
      <pubDate>Tue, 14 Sep 2021 08:26:00 +0800</pubDate>
      
      <guid>https://cyan-ripple.github.io/post/requestsproxy/</guid>
      <description> 并不是关于IP池，而是用于本地挂代理爬需要翻墙的数据
 问题的发现与解决 在requests库较新版本，通过挂系统代理来爬取HTTPS会报SSL错误。
查了很多资料，大部分是 更换使用的包到urllib、降低requests库版本……
解决不了问题，就解决发现问题的东西吗(ﾟДﾟ*)ﾉ
 然后自己思考了一会，想起来爬虫有个IP池的操作，本质上也是使用别人的代理，那么，把代理指向本地呢——问题完美解决
import requests headers = { &amp;#39;user-agent&amp;#39;: &amp;#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36 Edg/92.0.902.78&amp;#39; } sys_proxies = {&amp;#39;https&amp;#39;: &amp;#39;http://127.0.0.1:7890&amp;#39;, &amp;#39;http&amp;#39;: &amp;#39;http://127.0.0.1:7890&amp;#39;}	# 指向本地代理 response = requests.get(json_url(tag, page), headers=headers, proxies=sys_proxies) # 配置代理 </description>
    </item>
    
    <item>
      <title>局域网安卓ABD调试</title>
      <link>https://cyan-ripple.github.io/post/adbonlan/</link>
      <pubDate>Sun, 14 Mar 2021 01:23:00 +0800</pubDate>
      
      <guid>https://cyan-ripple.github.io/post/adbonlan/</guid>
      <description>前言 Google对于ADB的描述：
 Android 调试桥 (adb) 是一种功能多样的命令行工具，可让您与设备进行通信。adb 命令可用于执行各种设备操作（例如安装和调试应用），并提供对 Unix shell（可用来在设备上运行各种命令）的访问权限。
 无线ADB和USB连接原理相同，只是传输介质不同
简单流程  手机通过USB连接到电脑，处于开发者模式 CMD输入adb tcpip &amp;lt;端口号&amp;gt;（adb.exe已配置好path） CMD输入adb connect &amp;lt;手机IP&amp;gt;:&amp;lt;端口号&amp;gt;  tips  一般情况下，只要手机没有重启，已经完成上面操作的，再次连接只需要第3步 Windows Android Studio的Terminal本质也是CMD  </description>
    </item>
    
    
    
  </channel>
</rss>
